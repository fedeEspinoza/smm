c
user_signed_in?
c
user_signed_in?
c
user_signed_in?
c
current_user
c
current_user
c
Devise.current_user
devise.current_user
current_user
c
current_user
current_session
user
c
user_params
c
usuario_params
c
usuario_params
c
usuario_params
c
usuario_params
c
usuario_params
c
usuario_params
c
usuario_params
c
usuario_params
c
usuario_params
c
usuario_params
c
usuario_params
c
usuario_params
c
zona_usuarios
usuario_params
c
usuario_params
c
ruta.zona
ruta
c
usuario_params[:persona_attributes][:id]
usuario_params[:persona_attributes].delete('id')
usuario_params[:persona_attributes][:id].present?
usuario_params[:persona_attributes].delete('id')
usuario_params[:persona_attributes][:id].present?
usuario_params[:persona_atributes][:id].present?
c
usuario_params[:persona_attributes][:id].present?
c
usuario_params[:persona_attributes][:id].present?
c
usuario_params
c
user_params
c
user_params
params
user_params
c
user_params
c
@user.roles
@user.user_roles
@user.roles
user_params
c
user_params
c
user_params
c
self.roles.find_by(descripcion: "jefe")
self.roles.find_by(description: "jefe")
self.roles.find_by_name("jefe")
c
self.roles.find_by_description("jefe")
self.roles
c
usuario_params
c
Usuario.new(usuario_params)
Udsuario.new(usuario_params)
c
usuario_params
c
usuario_params
c
usuario_params
c
usuario_params
c
usuario_params
c
usuario_params
c
usuario_params
c
Usuario.new(usuario_params)
c
Usuario.new(usuario_params)
c
Usuario.new(usuario_params)
c
Usuario.new(usuario_params)
usuario_params
c
Usuario.new(usuario_params)
usuario_params
c
usuario_params
c
Usuario.new(usuario_params)
usuario_params
c
@usuario.errors[:base] << "No puede asignar más de un medidor de energía eléctrica (Activa o Reactiva)"
@usuario.errors
c
@usuario.errors.messages.add("fdsfds")
@usuario.errors.message.add("fdsfds")
@usuario.errors.messages << "fdsfds"
@usuario.errors
@usuario.errors[:messages] << "fdfdsfs"
@usuario.errors
@usuario.errors.add(:messages, "fdfdsfs")
@usuario.errors
c
@usuario.valid?
c
!@usuario.errors.any?
c
!@usuario.errors.any?
c
!@usuario.errors.any?
c
@usuario.errors.any?
c
@usuario.errors.any?
c
@usuario.errors
@usuario.errors.messages
c
@usuario.errors.any?
c
@usuario.errors.messages.blank?
@usuario.errors.any?
c
@usuario.errors.messages.empty?
@usuario.errors.messages
c
@usuario.errors
c
cantidad_por_tipo
c
cantidad_por_tipo
c
aux_hash
cantidad_por_tipo
c
aux_hash
cantidad_por_tipo
c
aux_hash
aux_hasg
aux_ash
cantidad_por_tipo
c
cantidad_por_tipo
c
cantidad_por_tipo
c
tipo_2_y_3
cantidad_por_tipo
c
cantidad_por_tipo
c
cantidad_por_tipo
c
cantidad_por_tipo
TipoMedidor.where(id: tipo_medidores_ids).group(:codigo).count
cantidad_por_tipo
c
Medidor.where(id: medidores_ids).group(:codigo).count
medidores_ids
c
cantidad_por_codigo
c
cantidad_por_codigo
cantidad_por_codigo[1]
c
cantidad_por_codigo[1]
cantidad_por_codigo
c
errors[:base]
errors
c
base.errors
errors
c
cantidad_por_tipo
c
cantidad_por_tipo
tipo_medidores_ids
medidores_ids
c
@usuario.medidors.each |e| e.to_s
@usuario.medidors each |e| e.to_s
@usuario.medidors each |e| e.to_s end
@usuario.medidors each |e|
@usuario.medidors
@usuario.usuario_medidors
@usuario.medidors
tipo_medidores_ids
c
@usuario.usuario_medidors
@usuario.usuario_medidores
tipo_medidores_ids
@usuario.medidors
c
@usuario.usuario_medidors
c
@usuario.medidors.map
@usuario.medidors.all
@usuario.medidors
c
C
cantidad_por_tipo = TipoMedidor.select(:codigo).where(id: [1,2,3]).count
TipoMedidor.select(:codigo).where(id: [1,2,3]).count
@usuario.medidors.map(&:tipo_medidor_id)
@usuario.medidors.all
@usuario.medidors
tipo_medidores_ids
tipo_medidores_id
c
@usuario
usuario_params
c
@usuario
c
usuario_params
c
Persona.where(:tipo_documento_id => persona[:tipo_documento_id], :nro_documento => persona[:nro_documento]).first
pers
pers.
pers = Persona.where(:tipo_documento_id => persona[:tipo_documento_id], :nro_documento => persona[:nro_documento]).first
